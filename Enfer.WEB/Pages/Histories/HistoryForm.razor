@using CurrieTechnologies.Razor.SweetAlert2;
@using Enfer.Shared.DTOS;
@inject SweetAlertService swal

<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation"></NavigationLock>

<EditForm EditContext="editContext" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />

    <div class="card-body">
        <div class="row">
            <div class="col-6">
                <div class="mb-3">

                    <label>Nombre de la historia:</label>
                    <div>
                        <InputText class="form-control" @bind-Value="@History.NameHistory" />
                        <ValidationMessage For="@(() => History.NameHistory)" />

                        <span class="validity"></span>
                        <p>Copiar el nombre de la enfermedad a la que se le hará la historia clínica</p>
                    </div>

                    <label>Descripción de la historia:</label>
                    <div>
                        <InputTextArea class="form-control" @bind-Value="@History.Description" />
                        <ValidationMessage For="@(() => History.Description)" />

                        
                    </div>

                    <label>Notas de enfermería:</label>
                    <div>
                        <InputTextArea class="form-control" @bind-Value="@History.Notes" />
                        <ValidationMessage For="@(() => History.Notes)" />

                        <span class="validity"></span>
                        <p>Copiar una sugerencia de no ser necesario copiar, ´ninguna´</p>
                    </div>

                    <label>Nombre del paciente:</label>
                    <div>
                        <InputText class="form-control" @bind-Value="@History.NamePacient" />
                        <ValidationMessage For="@(() => History.NamePacient)" />
                    </div>

                    <label>Documento del paciente:</label>
                    <div>
                        <InputText class="form-control" @bind-Value="@History.Document" />
                        <ValidationMessage For="@(() => History.Document)" />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-outline-primary">Guardar Cambios</button>
    <button class="btn btn-outline-success" @onclick="ReturnAction">Regresar</button>
</EditForm>

@code {

    private EditContext editContext = null!;

    protected override void OnInitialized()
    {
        editContext = new(History);
    }


    [EditorRequired]
    [Parameter]
    public History History { get; set; } = null!;

    [EditorRequired]
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    [EditorRequired]
    [Parameter]
    public EventCallback ReturnAction { get; set; }


    public bool FormPostedSuccessfully { get; set; } = false;

    private async Task OnBeforeInternalNavigation(LocationChangingContext context)
    {
        var formWasEdited = editContext.IsModified();

        if (!formWasEdited)
        {
            return;
        }

        if (FormPostedSuccessfully)
        {
            return;
        }

        var result = await swal.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmación",
                Text = "¿Deseas abandonar la página y perder los cambios?",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true
            });

        var confirm = !string.IsNullOrEmpty(result.Value);

        if (confirm)
        {
            return;
        }

        context.PreventNavigation();
    }
}

